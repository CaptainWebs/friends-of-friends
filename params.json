{"name":"Friends-of-friends","tagline":"Friendship Mangement System for Mongoose","body":"# friends-of-friends \r\n## Friendship Mangement System for Mongoose \r\n\r\n[![Build Status](https://travis-ci.org/adminion/friends-of-friends.svg?branch=master)](https://travis-ci.org/adminion/friends-of-friends) [![Coverage Status](https://coveralls.io/repos/adminion/friends-of-friends/badge.svg?branch=master)](https://coveralls.io/r/adminion/friends-of-friends?branch=master)\r\n\r\nThis module is almost finished, but I'm still writing tests to make sure it does what I say it should do.  \r\n\r\nThis module started as a core component of [adminion/off-the-record](https://github.com/adminion/off-the-record) but quickly became big enough (and useful enough) to be its own module.  The goal is to create a unopinionated tool with a rich API that simplifies managing Friend-Relationships for any existing mongoose \"user\" schema.  \r\n\r\n    $ npm install friends-of-friends\r\n\r\n## example use\r\n\r\n```javascript\r\nvar friendsOfFriends = require('friends-of-friends')(),\r\n    mongoose = require('mongoose');\r\n    \r\nvar UserSchema = new mongoose.Schema({\r\n    username: { type: String, unique: true }\r\n});\r\n\r\nUserSchema.plugin(friendsOfFriends.plugin);\r\n\r\nnew UserSchema({ username: \"Jeff\" }).save(function (err, jeff) {\r\n    if (err) throw err;\r\n\r\n    console.log(jeff);\r\n    // {\r\n    //     \"_id\" : ObjectId(\"5462a8748337aa9e306b5094\"),\r\n    //     \"username\" : \"Jeff\",\r\n    //     \"__v\" : 0\r\n    // }\r\n    \r\n    new userSchema({ username: \"Zane\"}).save(function (err, zane) {\r\n        if (err) throw err;\r\n\r\n        console.log(zane);\r\n        // {\r\n        //     \"_id\" : ObjectId(\"548a9f64728158187fb53319\"),\r\n        //     \"username\" : \"Zane\",\r\n        //     \"__v\" : 0\r\n        // }\r\n    \r\n        jeff.friendRequest(zane._id, function (err, pendingFriendship) {\r\n            if (err) throw err; \r\n\r\n            console.log(pendingFriendship);\r\n            // {\r\n            //     \"requester\" : ObjectId(\"5462a8748337aa9e306b5094\"),\r\n            //     \"requested\" : ObjectId(\"548a9f64728158187fb53319\"),\r\n            //     \"_id\" : ObjectId(\"548e86c96eb8f64370d90215\"),\r\n            //     \"dateSent\" : ISODate(\"2014-12-04T05:21:29.908Z\"),\r\n            //     \"status\" : \"Pending\",\r\n            //     \"__v\" : 0\r\n            // }\r\n            \r\n            zane.acceptRequest(jeff._id, funtion (err, acceptedFriendship) {\r\n                if (err) throw err;\r\n\r\n                console.log(acceptedFriendship);\r\n                // {\r\n                //     \"__v\" : 0,\r\n                //     \"_id\" : ObjectId(\"548e86c96eb8f64370d90215\"),\r\n                //     \"dateAccepted\" : ISODate(\"2014-12-04T05:26:09.583Z\"),\r\n                //     \"dateSent\" : ISODate(\"2014-12-04T05:21:29.908Z\"),\r\n                //     \"requested\" : ObjectId(\"548a9f64728158187fb53319\"),\r\n                //     \"requester\" : ObjectId(\"5462a8748337aa9e306b5094\"),\r\n                //     \"status\" : \"Accepted\"\r\n                // }\r\n    \r\n                zane.getFriends(function (err, friends) {\r\n                    if (err) throw err;\r\n    \r\n                    console.log(friends); \r\n                    // [{\r\n                    //     \"_id\" : ObjectId(\"5462a8748337aa9e306b5094\"),\r\n                    //     \"username\" : \"Jeff\",\r\n                    //     \"__v\" : 0\r\n                    // }]\r\n                })\r\n            });\r\n        });\r\n    });\r\n});\r\n```\r\n\r\n## API\r\nSee [docs/](https://github.com/adminion/friends-of-friends/tree/master/docs/) for API Documentation in both rich HTML/JavaScript and Markdown.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}